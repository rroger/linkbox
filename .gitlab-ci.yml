image: git.panter.ch:5001/panter/docker-build-images:ruby_2.5.1-yarn-firefox_beta

variables:
  POSTGRES_DB: linkbox_test
  DISABLE_SPRING: 'true'
  TZ: Europe/Zurich
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/$POSTGRES_DB"
  DANGER_GITLAB_HOST: git.panter.ch
  DANGER_GITLAB_API_BASE_URL: https://git.panter.ch/api/v4

cache:
  key: $CI_COMMIT_SHA
  untracked: true
  paths:
    - vendor/ruby
    - vendor
    - node_modules

before_script:
  - ls -A # Todo: fix caches and remove this debug output
  - ruby -v
  - gem install bundler --no-ri --no-rdoc # Bundler is not installed with the image
  - bundle install -j $(nproc) --path vendor
  - yarn install

stages:
  - build
  - test

setup:
  stage: build
  variables:
    RAILS_ENV: test
  script:
    - ls -A # Todo: fix caches and remove this debug output
    - ruby -v # Print out ruby version for debugging
    # If the cache would work, here could be the content of the before_script

.prepare_tests: &prepare_tests
  stage: test
  variables:
    RAILS_ENV: test

danger-review:
  stage: test
  allow_failure: true
  cache: {}
  dependencies: []
  before_script:
    - gem install danger-gitlab --no-document
  only:
    variables:
      - $DANGER_GITLAB_API_TOKEN
  except:
    refs:
      - master
    variables:
      - $CI_COMMIT_REF_NAME =~ /^ce-to-ee-.*/
      - $CI_COMMIT_REF_NAME =~ /.*-stable(-ee)?-prepare-.*/
  script:
    - git version
    - danger --fail-on-errors=true

linting:
 <<: *prepare_tests
 script:
    - bin/fastcheck

rspec:
  <<: *prepare_tests
  script:
    - bundle exec rake db:schema:load
    - bundle exec rspec spec

reek:
  <<: *prepare_tests
  script:
    - bundle exec reek

brakeman:
  <<: *prepare_tests
  script:
    - bundle exec brakeman -q -z --summary > /dev/null

bundler-audit:
  <<: *prepare_tests
  script:
    - bundle exec bundler-audit
