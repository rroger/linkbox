image: ruby:2.5.1

services:
  - postgres:9.4

variables:
  POSTGRES_DB: linkbox_teset
  DISABLE_SPRING: 'true'
  TZ: Europe/Zurich

cache:
  key: "$CI_PROJECT_ID"
  paths:
  - tmp/cache/ruby
  - tmp/cache/phantomjs

before_script:
- ruby -v                                      # Print out ruby version for debugging
- mkdir -p tmp/cache/phantomjs && ln -s `pwd`/tmp/cache/phantomjs /root/.phantomjs # Cache phantomjs download
- gem install bundler --no-ri --no-rdoc        # Bundler is not installed with the image
- bundle install -j $(nproc) --path tmp/cache  # Install dependencies into ./tmp/cache/ruby
- apt-get update -y && apt-get install ghostscript -y

stages:
  - test

linting:
  stage: test
  variables:
    RAILS_ENV: test
  script:
  - bin/fastcheck
  artifacts:
    paths:
    - tmp/
    expire_in: 1 week
    when: on_failure

rspec:
  stage: test
  variables:
    DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/$POSTGRES_DB"
    RAILS_ENV: test
  script:
  - bundle exec rake db:schema:load
  - bundle exec rspec spec
  artifacts:
    paths:
    - tmp/capybara/
    expire_in: 1 week
    when: on_failure

reek:
  stage: test
  variables:
    RAILS_ENV: test
  script:
  - bundle exec reek
  artifacts:
    paths:
    - tmp/capybara/
    expire_in: 1 week
    when: on_failure

brakeman:
  stage: test
  variables:
    RAILS_ENV: test
  script:
  - bundle exec brakeman -q -z --summary > /dev/null
  artifacts:
    paths:
    - tmp/capybara/
    expire_in: 1 week
    when: on_failure

bundler-audit:
  stage: test
  variables:
    RAILS_ENV: test
  script:
  - bundle exec bundler-audit
  artifacts:
    paths:
    - tmp/capybara/
    expire_in: 1 week
    when: on_failure
